folder('Tools') {
  description('Folder for miscellaneous tools.')
}

job('Tools/clone-repository') {
  description('Clones a Git repository.')
  disabled(false)
  parameters {
    stringParam('GIT_REPOSITORY_URL', null, 'Git URL of the repository to clone')
  }
  wrappers {
    preBuildCleanup()
  }
  triggers {}
  steps {
    shell('git clone $GIT_REPOSITORY_URL')
  }
}

job('Tools/SEED') {
  description('Seed job to create other jobs based on parameters.')
  disabled(false)
  parameters {
    stringParam('GITHUB_NAME', null, 'GitHub repository owner/repo_name (e.g.: EpitechIT31000/chocolatine)')
    stringParam('DISPLAY_NAME', null, 'Display name for the job')
  }
  triggers {}
  steps {
    jobDsl {
      scriptText("""
        def repoName = GITHUB_NAME
        def jobName = DISPLAY_NAME
        def githubProjectUrl = "https://github.com/\${repoName}"
        def gitScmUrl = "https://github.com/\${repoName}.git"

        job(jobName) {
          description("Job generated by SEED for repository \${repoName}")
          disabled(false)
          properties {
            githubProjectUrl(githubProjectUrl)
          }
          parameters {}
          triggers {
            scm('* * * * *')
          }
          scm {
            git {
              remote {
                url(gitScmUrl)
              }
            }
          }
          wrappers {
            preBuildCleanup()
          }
          steps {
            shell('make fclean')
            shell('make')
            shell('make tests_run')
            shell('make clean')
          }
        }
      """.stripIndent())
      removedJobAction('DELETE')
      removedViewAction('DELETE')
      removedNodeAction('DISABLE')
      lookupStrategy('JENKINS_ROOT')
      ignoreExisting(false)
    }
  }
}